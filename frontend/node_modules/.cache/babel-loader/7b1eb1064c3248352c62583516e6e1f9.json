{"ast":null,"code":"var _jsxFileName = \"/Users/keithjones/Documents/development/projects/mp-lax/frontend/src/components/Title.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = _ref => {\n  let {\n    children\n  } = _ref;\n\n  if (typeof children !== 'string') {\n    console.error('props.children must be a string');\n    return null;\n  }\n\n  let [first, ...rest] = children.split(' ');\n  first = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"font-bold\",\n    children: first\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 14\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-block md:pr-20 border-b border-mpred mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg\",\n      children: [first, \" \", rest.join(' ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Title;\nexport default Title;\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/keithjones/Documents/development/projects/mp-lax/frontend/src/components/Title.js"],"names":["Title","children","console","error","first","rest","split","join"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;;AAC5B,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9BC,IAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd;AACA,WAAO,IAAP;AACH;;AAED,MAAI,CAACC,KAAD,EAAQ,GAAGC,IAAX,IAAmBJ,QAAQ,CAACK,KAAT,CAAe,GAAf,CAAvB;AACAF,EAAAA,KAAK,gBAAI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,cAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAT;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,iBAAyBA,KAAzB,OAAiCC,IAAI,CAACE,IAAL,CAAU,GAAV,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAdD;;KAAMP,K;AAgBN,eAAeA,KAAf","sourcesContent":["const Title = ({ children }) => {\n    if (typeof children !== 'string') {\n        console.error('props.children must be a string');\n        return null;\n    }\n\n    let [first, ...rest] = children.split(' ');\n    first = (<span className=\"font-bold\">{first}</span>)\n\n    return (\n        <div className=\"inline-block md:pr-20 border-b border-mpred mb-4\">\n            <h3 className=\"text-lg\">{first} {rest.join(' ')}</h3>\n        </div>\n    )\n}\n\nexport default Title;\n"]},"metadata":{},"sourceType":"module"}