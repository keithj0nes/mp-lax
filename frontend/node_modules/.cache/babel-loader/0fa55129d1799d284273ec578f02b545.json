{"ast":null,"code":"var _jsxFileName = \"/Users/keithjones/Documents/development/projects/mp-lax/src/components/Title.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = _ref => {\n  let {\n    children\n  } = _ref;\n\n  if (typeof children !== 'string') {\n    console.error('props.children must be a string');\n    return null;\n  } // const m = children.split(' ');\n  // console.log(b, 'b')\n\n\n  let [q, ...rest] = children.split(' ');\n  q = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"font-bold\",\n    children: q\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-block md:pr-20 border-b border-mpred mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg\",\n      children: [q, \" \", rest.join(' ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Title;\nexport default Title;\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/keithjones/Documents/development/projects/mp-lax/src/components/Title.js"],"names":["Title","children","console","error","q","rest","split","join"],"mappings":";;;AAEA,MAAMA,KAAK,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;;AAC5B,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9BC,IAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd;AACA,WAAO,IAAP;AACH,GAJ2B,CAM5B;AAGA;;;AAEA,MAAI,CAACC,CAAD,EAAI,GAAGC,IAAP,IAAeJ,QAAQ,CAACK,KAAT,CAAe,GAAf,CAAnB;AACAF,EAAAA,CAAC,gBAAI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,cAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAL;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,iBAAyBA,CAAzB,OAA6BC,IAAI,CAACE,IAAL,CAAU,GAAV,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;KAAMP,K;AAqBN,eAAeA,KAAf","sourcesContent":["\n\nconst Title = ({ children }) => {\n    if (typeof children !== 'string') {\n        console.error('props.children must be a string');\n        return null;\n    }\n\n    // const m = children.split(' ');\n\n\n    // console.log(b, 'b')\n\n    let [q, ...rest] = children.split(' ');\n    q = (<span className=\"font-bold\">{q}</span>)\n\n    return (\n        <div className=\"inline-block md:pr-20 border-b border-mpred mb-4\">\n            <h3 className=\"text-lg\">{q} {rest.join(' ')}</h3>\n        </div>\n    )\n}\n\nexport default Title;\n"]},"metadata":{},"sourceType":"module"}