{"ast":null,"code":"var _jsxFileName = \"/Users/keithjones/Documents/development/projects/mp-lax/src/pages/players.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport { ArrowDownIcon } from '@heroicons/react/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYERS = [{\n  id: 1,\n  first_name: 'John',\n  last_name: 'Hicks',\n  number: 22,\n  graduation_year: 2024,\n  games_played: 4\n}, {\n  id: 2,\n  first_name: 'Aiden',\n  last_name: 'Carlock',\n  number: 24,\n  graduation_year: 2024,\n  games_played: 6\n}];\nexport default function Players() {\n  _s();\n\n  let params = useParams();\n  console.log(params, 'param');\n  const headers = [{\n    label: '#',\n    sort: 'number',\n    className: 'whitespace-nowrap',\n    default: true\n  }, {\n    label: 'Player',\n    sort: 'last_name',\n    className: 'whitespace-nowrap'\n  }, {\n    label: 'GP',\n    sort: 'games_played'\n  }];\n  const columns = {\n    number: 'number',\n    date: 'date',\n    games_played: 'number',\n    // email: 'string',\n    // amount: 'currency',\n    // subscription: {\n    //     type: 'boolean',\n    //     format: <svg className=\"transition duration-200 opacity-1 w-4 h-4 text-purple pointer-events-none\" viewBox=\"0 0 172 172\"><g fill=\"none\" strokeWidth=\"none\" strokeMiterlimit=\"10\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode:'normal'}}><path d=\"M0 172V0h172v172z\"/><path d=\"M145.433 37.933L64.5 118.8658 33.7337 88.0996l-10.134 10.1341L64.5 139.1341l91.067-91.067z\" fill=\"currentColor\" strokeWidth=\"1\"/></g></svg>,\n    //     className: 'justify-center flex',\n    // },\n    name: {\n      type: 'link',\n      format: '/dashboard/orders/$id',\n      as: 'hahahah $last_name' // as: 'View Details',\n      // className: 'w-0 whitespace-nowrap'\n\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Players: \", params.players]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      headers: headers,\n      columns: columns,\n      body: PLAYERS,\n      title: \"Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Players, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Players;\n\nconst Table = _ref => {\n  _s2();\n\n  var _headers$find;\n\n  let {\n    headers,\n    columns,\n    body,\n    uniqueKey,\n    title\n  } = _ref;\n  const [sortBy, setSortBy] = useState(((_headers$find = headers.find(h => h.default)) === null || _headers$find === void 0 ? void 0 : _headers$find.sort) || null);\n  const [sortDir, setSortDir] = useState('asc'); // useEffect(() => {\n  //     // set ordering if query params exist\n  //     const queryParams = {...router.query};\n  //     // delete queryParams.tab\n  //     if (Object.keys(queryParams).length !== 0) {\n  //         setSortBy(queryParams.orderby);\n  //         setSortDir(queryParams.dir);\n  //     }\n  // }, [])\n\n  const applySort = sortField => {\n    let direction = sortDir === 'asc' ? 'desc' : 'asc';\n\n    if (sortField !== sortBy) {\n      direction = 'asc';\n    }\n\n    console.log(sortField, 'sortField');\n    setSortBy(sortField);\n    setSortDir(direction); // router.push({ query: { ...router.query, orderby: sortField, dir: direction }});\n  };\n\n  const TableSort = _ref2 => {\n    let {\n      label,\n      sort,\n      className\n    } = _ref2;\n    const isSortable = sort !== undefined;\n    const active = sort === sortBy;\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      className: `p-2 ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => !!sort && applySort(sort),\n        className: classnames(`font-semibold text-left relative`, {\n          'hover:underline cursor-pointer': !!sort\n        }),\n        children: [label, /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n          className: classnames(`inline h-3 mx-1 absolute top-px text-indigo-500`, {\n            'invisible': !isSortable || !active,\n            'rotate-180': sortDir === 'desc'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  };\n\n  body.sort((a, b) => {\n    // console.log(sortBy, 'sortBysortBysortBysortBy')\n    // console.log(a, b, 'A B')\n    // console.log(a[sortBy], b[sortBy], 'a[sortBy] b[sortBy]')\n    // console.log(typeof a[sortBy], typeof b[sortBy], 'type offfff')\n    // return \n    if (!sortBy) return;\n\n    if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number' || typeof a[sortBy] === 'boolean' && typeof b[sortBy] === 'boolean') {\n      if (sortDir === 'asc') {\n        return b[sortBy] - a[sortBy];\n      }\n\n      return a[sortBy] - b[sortBy];\n    }\n\n    if (sortDir === 'asc') {\n      return a[sortBy].localeCompare(b[sortBy]);\n    }\n\n    return b[sortBy].localeCompare(a[sortBy]);\n  });\n\n  const switchType = (type, value, keyValue, item, ind) => {\n    // console.log(type, 'type')\n    switch (type) {\n      case 'number':\n      case 'string':\n      case 'date':\n        return value;\n\n      case 'index':\n        return ind + 1;\n\n      case 'math/currency':\n        const formatted = variableStringFormatter(value.format, item).replace(/\\s/g, '');\n        const splitOnOperators = formatted.match(/[^\\d()]+|[\\d.]+/g);\n        const [num1, op, num2] = splitOnOperators;\n        let answer;\n\n        switch (op) {\n          case '*':\n            answer = num1 * num2;\n            break;\n\n          case '/':\n            answer = num1 / num2;\n            break;\n\n          case '+':\n            answer = num1 + num2;\n            break;\n\n          case '-':\n            answer = num1 - num2;\n            break;\n\n          default:\n            break;\n        } // console.log(currency(answer))\n        //     return currency(answer)\n        // case 'currency':\n        //     return currency(value);\n        // case 'boolean':\n        // console.log(type, value, keyValue, 'type value BOOLEAN!!!!')\n        // if (!keyValue) console.warn('Please make sure column is an object with a format key [SortableTable.js boolean]')\n\n\n        return !!keyValue ? value.format : null;\n\n      case 'link':\n        // console.log(type, value, keyValue, item, 'type value LINK!!')\n        const href = variableStringFormatter(value.format, item);\n        console.log(href, 'rhehfhf');\n        const as = variableStringFormatter(value.as, item);\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: href,\n          children: as\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return value;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-span-full xl:col-span-6 bg-white shadow-lg rounded-sm border border-gray-200 mb-8\",\n    children: [title && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 py-4 border-b border-gray-200 bg-emerald-200\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-semibold text-gray-800\",\n        children: [title, \" - (custom table)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-auto w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-xs uppercase text-gray-400 bg-gray-50 rounded-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: headers.map(item => {\n                return /*#__PURE__*/_jsxDEV(TableSort, {\n                  label: item.label,\n                  sort: item.sort,\n                  className: item.className\n                }, item.label, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"text-sm font-medium divide-y divide-gray-100\",\n            children: body.map((item, ind) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.entries(columns).map(_ref3 => {\n                  let [colKey, colValue] = _ref3;\n                  // console.log(colKey, colValue, 'COL')\n                  let formattedRow;\n\n                  if (typeof colValue === 'object') {\n                    formattedRow = switchType(colValue.type, colValue, item[colKey], item, ind);\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: `p-2 ${colValue.className}`,\n                      children: formattedRow\n                    }, colKey, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 53\n                    }, this);\n                  }\n\n                  formattedRow = switchType(colValue, item[colKey], null, null, ind); // console.log(stuff, 'STUFF!!!')\n\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"p-2\",\n                    children: formattedRow\n                  }, colKey, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, uniqueKey ? item[uniqueKey] : item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n}; // this function takes the format string, replaces the $variable_name with the variable passed into the data prop and returns the original string with replaced variables\n// format: '/dashboard/orders/$id'\n\n\n_s2(Table, \"GTCWLqJcDvgAoXT2OYTET2X4CxE=\");\n\n_c2 = Table;\n\nfunction variableStringFormatter(str, data) {\n  // return str.split(/(?=[\\s.,:;-])|(?<=[\\s.,:;-])/g).map(item => {\n  return str.split(/([\\s()/\\.,:;-])/g).map(item => {\n    if (item.charAt(0) === '$') {\n      return Object.keys(data).map(i => {\n        if (i === item.slice(1)) {\n          return data[i] || '0';\n        }\n\n        return null;\n      }).filter(Boolean);\n    }\n\n    return item;\n  }).join('');\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Players\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["/Users/keithjones/Documents/development/projects/mp-lax/src/pages/players.js"],"names":["useState","useEffect","useParams","Link","classnames","ArrowDownIcon","PLAYERS","id","first_name","last_name","number","graduation_year","games_played","Players","params","console","log","headers","label","sort","className","default","columns","date","name","type","format","as","padding","players","Table","body","uniqueKey","title","sortBy","setSortBy","find","h","sortDir","setSortDir","applySort","sortField","direction","TableSort","isSortable","undefined","active","a","b","localeCompare","switchType","value","keyValue","item","ind","formatted","variableStringFormatter","replace","splitOnOperators","match","num1","op","num2","answer","href","map","Object","entries","colKey","colValue","formattedRow","str","data","split","charAt","keys","i","slice","filter","Boolean","join"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport { ArrowDownIcon } from '@heroicons/react/solid';\n\nconst PLAYERS = [\n  { id: 1, first_name: 'John', last_name: 'Hicks', number: 22, graduation_year: 2024, games_played: 4 },\n  { id: 2, first_name: 'Aiden', last_name: 'Carlock', number: 24, graduation_year: 2024, games_played: 6 }\n\n]\n\nexport default function Players() {\n    let params = useParams();\n    console.log(params, 'param')\n\n\n    const headers = [\n        { label: '#', sort: 'number', className: 'whitespace-nowrap', default: true },\n        { label: 'Player', sort: 'last_name', className: 'whitespace-nowrap' },\n        { label: 'GP', sort: 'games_played' },\n\n    ];\n\n    const columns = {\n        number: 'number',\n        date: 'date',\n        games_played: 'number',\n        // email: 'string',\n        // amount: 'currency',\n        // subscription: {\n        //     type: 'boolean',\n        //     format: <svg className=\"transition duration-200 opacity-1 w-4 h-4 text-purple pointer-events-none\" viewBox=\"0 0 172 172\"><g fill=\"none\" strokeWidth=\"none\" strokeMiterlimit=\"10\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode:'normal'}}><path d=\"M0 172V0h172v172z\"/><path d=\"M145.433 37.933L64.5 118.8658 33.7337 88.0996l-10.134 10.1341L64.5 139.1341l91.067-91.067z\" fill=\"currentColor\" strokeWidth=\"1\"/></g></svg>,\n        //     className: 'justify-center flex',\n        // },\n        name: {\n            type: 'link',\n            format: '/dashboard/orders/$id',\n            as: 'hahahah $last_name',\n            // as: 'View Details',\n            // className: 'w-0 whitespace-nowrap'\n        }\n    }\n\n\n    return (\n        <main style={{ padding: \"1rem 0\" }}>\n            <h2>Players: {params.players}</h2>\n\n\n\n        <Table\n            headers={headers}\n            columns={columns}\n            body={PLAYERS}\n            title=\"Players\"\n        />\n            {/* <div className=\"flex\">\n                {PLAYERS.map(item => {\n                    return (\n                        <div className=\"p-2 bg-white mx-2\">\n                            <h3 className=\"text-center\">\n                                {item.first_name} {item.last_name}\n                            </h3>\n\n                        </div>\n                    )\n                })}\n            </div> */}\n        </main>\n    );\n}\n\nconst Table = ({ headers, columns, body, uniqueKey, title }) => {\n\n    const [sortBy, setSortBy] = useState(headers.find(h => h.default)?.sort || null);\n    const [sortDir, setSortDir] = useState('asc');\n\n    // useEffect(() => {\n    //     // set ordering if query params exist\n    //     const queryParams = {...router.query};\n    //     // delete queryParams.tab\n\n    //     if (Object.keys(queryParams).length !== 0) {\n    //         setSortBy(queryParams.orderby);\n    //         setSortDir(queryParams.dir);\n    //     }\n    // }, [])\n\n    const applySort = (sortField) => {\n        let direction = sortDir === 'asc' ? 'desc' : 'asc'\n        if (sortField !== sortBy) {\n            direction = 'asc'\n        }\n        console.log(sortField, 'sortField')\n        setSortBy(sortField);\n        setSortDir(direction);\n\n        // router.push({ query: { ...router.query, orderby: sortField, dir: direction }});\n    }\n\n\n    const TableSort = ({ label, sort, className }) => {\n        const isSortable = sort !== undefined;\n        const active = sort === sortBy;\n        return (\n            <th className={`p-2 ${className}`}>\n                <div\n                    onClick={() => !!sort && applySort(sort)}\n                    className={classnames(\n                        `font-semibold text-left relative`,\n                        {\n                            'hover:underline cursor-pointer': !!sort,\n                        }\n                    )} \n                >\n                    {label}\n\n                    <ArrowDownIcon className={classnames(\n                        `inline h-3 mx-1 absolute top-px text-indigo-500`,\n                        {\n                            'invisible': !isSortable || !active,\n                            'rotate-180': sortDir === 'desc',\n                        }\n                        )} \n                    />\n                </div> \n            </th>\n        )\n    }\n\n    body.sort((a, b) => {\n        // console.log(sortBy, 'sortBysortBysortBysortBy')\n        // console.log(a, b, 'A B')\n        // console.log(a[sortBy], b[sortBy], 'a[sortBy] b[sortBy]')\n        // console.log(typeof a[sortBy], typeof b[sortBy], 'type offfff')\n        // return \n        if (!sortBy) return;\n        if (\n            (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') ||\n            (typeof a[sortBy] === 'boolean' && typeof b[sortBy] === 'boolean')\n        ) {\n            if (sortDir === 'asc') {\n                return b[sortBy] - a[sortBy]\n            }\n            return a[sortBy] - b[sortBy]\n        }\n\n        if (sortDir === 'asc') {\n            return a[sortBy].localeCompare(b[sortBy])\n        }\n        return b[sortBy].localeCompare(a[sortBy])\n    })\n\n\n    const switchType = (type, value, keyValue, item, ind) => {\n        // console.log(type, 'type')\n        switch (type) {\n            case 'number':\n            case 'string':\n            case 'date':\n                return value;\n            case 'index':\n                return ind + 1;\n            case 'math/currency':\n                const formatted = variableStringFormatter(value.format, item).replace(/\\s/g, '');\n                const splitOnOperators = formatted.match(/[^\\d()]+|[\\d.]+/g);\n                const [num1, op, num2] = splitOnOperators;\n                let answer\n                switch (op) {\n                    case '*':\n                        answer = num1 * num2;\n                        break;\n                    case '/':\n                        answer = num1 / num2;\n                        break;\n                    case '+':\n                        answer = num1 + num2;\n                        break;\n                    case '-':\n                        answer = num1 - num2;\n                        break;\n                    default:\n                        break;\n                }\n\n                // console.log(currency(answer))\n            //     return currency(answer)\n            // case 'currency':\n            //     return currency(value);\n            // case 'boolean':\n            // console.log(type, value, keyValue, 'type value BOOLEAN!!!!')\n                // if (!keyValue) console.warn('Please make sure column is an object with a format key [SortableTable.js boolean]')\n                return !!keyValue ? value.format : null;\n            case 'link':\n                // console.log(type, value, keyValue, item, 'type value LINK!!')\n                const href = variableStringFormatter(value.format, item)\n\n                console.log(href, 'rhehfhf')\n                const as = variableStringFormatter(value.as, item)\n\n                return (\n                    <Link to={href}>\n                        {/* <a className=\"text-xs hover:text-gray-800 transition duration-200 underline\" href=\"\"> */}\n                            {as}\n                            {/* </a> */}\n                    </Link>\n                );\n            default:\n                return value;    \n                \n        }\n    }\n\n    return (\n        <div className=\"col-span-full xl:col-span-6 bg-white shadow-lg rounded-sm border border-gray-200 mb-8\">\n            {title && (\n                <div className=\"px-5 py-4 border-b border-gray-200 bg-emerald-200\">\n                    <h2 className=\"font-semibold text-gray-800\">{title} - (custom table)</h2>\n                </div>\n            )}\n        {/* <h2>Sortable Table component</h2> */}\n\n            <div className=\"p-3\">\n                <div className=\"overflow-x-auto\">\n                    <table className=\"table-auto w-full\">\n                        <thead className=\"text-xs uppercase text-gray-400 bg-gray-50 rounded-sm\">\n                            <tr>\n                                {headers.map(item => {\n                                    return (\n                                        <TableSort label={item.label} sort={item.sort} className={item.className} key={item.label} />\n                                    )\n                                })}\n                            </tr>\n                        </thead>\n\n                        <tbody className=\"text-sm font-medium divide-y divide-gray-100\">\n\n                            {body.map((item, ind) => {\n                                return (\n                                    <tr key={uniqueKey ? item[uniqueKey] :item.id}>\n                                        {Object.entries(columns).map(([colKey, colValue]) => {\n                                            // console.log(colKey, colValue, 'COL')\n                                            let formattedRow;\n                                            if (typeof colValue === 'object') {\n                                                formattedRow = switchType(colValue.type, colValue, item[colKey], item, ind)\n                                                return (\n                                                    <td className={`p-2 ${colValue.className}`} key={colKey}>{formattedRow}</td>\n                                                )\n                                            } \n\n                                            formattedRow = switchType(colValue, item[colKey], null, null, ind);\n                                            // console.log(stuff, 'STUFF!!!')\n                                            return (\n                                                <td className=\"p-2\" key={colKey}>{formattedRow}</td>\n                                            )\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>                        \n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// this function takes the format string, replaces the $variable_name with the variable passed into the data prop and returns the original string with replaced variables\n// format: '/dashboard/orders/$id'\n\nfunction variableStringFormatter(str, data) {\n    // return str.split(/(?=[\\s.,:;-])|(?<=[\\s.,:;-])/g).map(item => {\n    return str.split(/([\\s()/\\.,:;-])/g).map(item => {\n        if (item.charAt(0) === '$') {\n            return Object.keys(data).map(i => {\n                if (i === item.slice(1)) {\n                    return data[i] || '0';\n                }\n                return null;\n            }).filter(Boolean);\n        }\n        return item;\n    }).join('');\n}\n\n"]},"metadata":{},"sourceType":"module"}