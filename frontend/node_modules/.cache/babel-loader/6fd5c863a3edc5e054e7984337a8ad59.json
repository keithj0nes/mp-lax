{"ast":null,"code":"var _jsxFileName = \"/Users/keithjones/Documents/development/projects/mp-lax/frontend/src/pages/Games.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'; // import dateFormat from 'date-fns/format';\n\nimport { format, parseISO } from 'date-fns';\nimport { Table, Select, Title, Modal } from \"../components\";\nimport { CreateGameModal } from \"../components/modals\";\nimport { getAllGames } from \"../redux/slices/gamesSlice\"; // const GAMES = [\n//     { id: 1, home: true, opponent: 'Sequoia', date: '2/10/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 9, goals_against: 7, goal_differential: '+2' },\n//     { id: 2, home: false, opponent: 'Peachtree Ridge', date: '2/13/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 11, goals_against: 12, goal_differential: -1 },\n//     { id: 3, home: true, opponent: 'Alpharetta', date: '2/23/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 19, goals_against: 6, goal_differential: '+13' },\n//     { id: 4, home: true, opponent: 'Alpharetta', date: '2/25/22', has_been_played: false, location: '', notes: 'notes about game' },\n//     { id: 5, home: false, opponent: 'Roswell HS', date: '2/30/22', has_been_played: false, location: '', notes: 'notes about game' }\n// ]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Games = () => {\n  _s();\n\n  const [showCreateGameModal, setShowCreateGameModal] = useState(false);\n  const [selectedSeason, setSelectedSeason] = useState({\n    value: 525,\n    label: '2022 - [current]'\n  });\n  const dispatch = useDispatch();\n  const {\n    games,\n    isLoading\n  } = useSelector(state => state.games); // console.log(games,' GAMMMEEESSS')\n\n  useEffect(() => {\n    dispatch(getAllGames());\n  }, [dispatch]); // const formattedGames = GAMES.map(item => {\n  //     return { \n  //         ...item,\n  //         opponent: `${item.home ? 'vs' : '@'} ${item.opponent}`,\n  //         goal_differential: `${!item.has_been_played ? 'Not Yet Played' : item.goal_differential}`\n  //     }\n  // })\n  // const headers = [\n  //     { label: 'Date', className: 'whitespace-nowrap w-0', default: true },\n  //     // { label: '', className: 'w-0' },\n  //     { label: 'Opponent' },\n  //     { label: 'GF' },\n  //     { label: 'GA' },\n  //     { label: 'Diff' },\n  // ];\n  // const columns = {\n  //     date: 'date',\n  //     opponent: {\n  //         type: 'link',\n  //         format: '/games/$id',\n  //         as: '$opponent',\n  //         className: 'whitespace-nowrap',\n  //     },\n  //     goals_for: 'number',\n  //     goals_against: 'number',\n  //     // goal_differential: 'number',\n  //     goal_differential: {\n  //         type: 'number',\n  //         className: 'whitespace-nowrap'\n  //     },\n  // }\n\n  const optionsExample = [{\n    value: 525,\n    label: '2022 - [current]'\n  }, {\n    value: 5253,\n    label: '2021'\n  }, {\n    value: 52534,\n    label: '2020'\n  }, {\n    value: 2352,\n    label: '2019'\n  }, {\n    value: 3423,\n    label: '2018'\n  }]; // start_date: [d.date, d.start_time] = dateFormat(d.start_date, 'MM/DD/YY h:mmA').split(' ')\n\n  const formattedGames2 = games.map(item => {\n    // let result = '';\n    // if (!!item.goal_differential) {\n    //     console.log(Math.sign(item.goal_differential), 'item.goal_differential')\n    //     if (item.goal_differential === 0) {\n    //         result = 'T';\n    //     } else if (item.goal_differential > 0) {\n    //         result = 'W'\n    //     } else {\n    //         result = 'L'\n    //     }\n    // }\n    return { ...item,\n      opponent: `${item.is_home ? 'vs' : '@'} ${item.opponent}`,\n      // goal_differential: `${!item.has_been_played ? 'Not Yet Played' : item.goal_differential}`,\n      goal_differential: item.goal_differential > 0 ? `+${item.goal_differential}` : item.goal_differential,\n      // start_date: dateFormat(item.start_date, 'MM/DD/YY')\n      start_date: format(parseISO(item.start_date), \"M/dd/yy\") // result,\n\n    };\n  }); // console.log(formattedGames2, 'formattedGames2')\n\n  const headers2 = [{\n    label: 'Date',\n    className: 'whitespace-nowrap w-0',\n    default: true\n  }, // { label: '', className: 'w-0' },\n  {\n    label: 'Opponent'\n  }, {\n    label: 'Result'\n  }, {\n    label: 'GF'\n  }, {\n    label: 'GA'\n  }, {\n    label: 'Diff'\n  }];\n  const columns2 = {\n    start_date: 'date',\n    opponent: {\n      type: 'link',\n      format: '/games/$game_id',\n      as: '$opponent',\n      className: 'whitespace-nowrap'\n    },\n    result: 'string',\n    goals_for: 'number',\n    goals_against: 'number',\n    goal_differential: 'number' // goal_differential: {\n    //     type: 'number',\n    //     className: 'whitespace-nowrap'\n    // },\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"py-6\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCreateGameModal,\n      onClose: setShowCreateGameModal,\n      closeableOnBackdrop: !isLoading,\n      children: closeModal => /*#__PURE__*/_jsxDEV(CreateGameModal, {\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateGameModal(true),\n        className: \"transition duration-300 border border-mpblue text-mpblue py-1 px-3 mb-4  hover:text-white hover:bg-mpblue\",\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-3 mb-6 sm:p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"justify-between mb-3 sm:flex\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-6 sm:mb-0 \",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm mr-2 mt-1\",\n            children: \"Season:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full sm:w-48\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              disabled: true,\n              options: optionsExample,\n              onChange: e => setSelectedSeason(e),\n              value: selectedSeason\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        headers: headers2,\n        columns: columns2,\n        body: formattedGames2 // title=\"Games\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Games, \"o3RiVJ/t+aHjeRcsmfLM7rNY5bo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Games;\nexport default Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/keithjones/Documents/development/projects/mp-lax/frontend/src/pages/Games.js"],"names":["useState","useEffect","useDispatch","useSelector","format","parseISO","Table","Select","Title","Modal","CreateGameModal","getAllGames","Games","showCreateGameModal","setShowCreateGameModal","selectedSeason","setSelectedSeason","value","label","dispatch","games","isLoading","state","optionsExample","formattedGames2","map","item","opponent","is_home","goal_differential","start_date","headers2","className","default","columns2","type","as","result","goals_for","goals_against","closeModal","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\n// import dateFormat from 'date-fns/format';\nimport { format, parseISO } from 'date-fns' \nimport { Table , Select, Title, Modal } from \"../components\";\nimport { CreateGameModal } from \"../components/modals\";\n\nimport { getAllGames } from \"../redux/slices/gamesSlice\";\n\n// const GAMES = [\n//     { id: 1, home: true, opponent: 'Sequoia', date: '2/10/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 9, goals_against: 7, goal_differential: '+2' },\n//     { id: 2, home: false, opponent: 'Peachtree Ridge', date: '2/13/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 11, goals_against: 12, goal_differential: -1 },\n//     { id: 3, home: true, opponent: 'Alpharetta', date: '2/23/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 19, goals_against: 6, goal_differential: '+13' },\n//     { id: 4, home: true, opponent: 'Alpharetta', date: '2/25/22', has_been_played: false, location: '', notes: 'notes about game' },\n//     { id: 5, home: false, opponent: 'Roswell HS', date: '2/30/22', has_been_played: false, location: '', notes: 'notes about game' }\n\n// ]\n\nconst Games = () => {\n    const [showCreateGameModal, setShowCreateGameModal] = useState(false);\n    const [selectedSeason, setSelectedSeason] = useState({ value: 525, label: '2022 - [current]' });\n    const dispatch = useDispatch();\n    const { games, isLoading } = useSelector(state => state.games)\n\n    // console.log(games,' GAMMMEEESSS')\n\n    useEffect(() => {\n        dispatch(getAllGames())\n    }, [dispatch])\n\n    // const formattedGames = GAMES.map(item => {\n    //     return { \n    //         ...item,\n    //         opponent: `${item.home ? 'vs' : '@'} ${item.opponent}`,\n    //         goal_differential: `${!item.has_been_played ? 'Not Yet Played' : item.goal_differential}`\n    //     }\n    // })\n\n    // const headers = [\n    //     { label: 'Date', className: 'whitespace-nowrap w-0', default: true },\n    //     // { label: '', className: 'w-0' },\n    //     { label: 'Opponent' },\n    //     { label: 'GF' },\n    //     { label: 'GA' },\n    //     { label: 'Diff' },\n    // ];\n\n    // const columns = {\n    //     date: 'date',\n    //     opponent: {\n    //         type: 'link',\n    //         format: '/games/$id',\n    //         as: '$opponent',\n    //         className: 'whitespace-nowrap',\n    //     },\n    //     goals_for: 'number',\n    //     goals_against: 'number',\n    //     // goal_differential: 'number',\n    //     goal_differential: {\n    //         type: 'number',\n    //         className: 'whitespace-nowrap'\n    //     },\n\n    // }\n\n    const optionsExample = [\n        { value: 525, label: '2022 - [current]' },\n        { value: 5253, label: '2021' },\n        { value: 52534, label: '2020' },\n        { value: 2352, label: '2019' },\n        { value: 3423, label: '2018' },\n    ]\n    // start_date: [d.date, d.start_time] = dateFormat(d.start_date, 'MM/DD/YY h:mmA').split(' ')\n\n\n    const formattedGames2 = games.map(item => {\n        // let result = '';\n\n        // if (!!item.goal_differential) {\n        //     console.log(Math.sign(item.goal_differential), 'item.goal_differential')\n        //     if (item.goal_differential === 0) {\n        //         result = 'T';\n        //     } else if (item.goal_differential > 0) {\n        //         result = 'W'\n        //     } else {\n        //         result = 'L'\n        //     }\n        // }\n        return { \n            ...item,\n            opponent: `${item.is_home ? 'vs' : '@'} ${item.opponent}`,\n            // goal_differential: `${!item.has_been_played ? 'Not Yet Played' : item.goal_differential}`,\n            goal_differential: item.goal_differential > 0 ? `+${item.goal_differential}` : item.goal_differential,\n            // start_date: dateFormat(item.start_date, 'MM/DD/YY')\n            start_date: format(parseISO(item.start_date), \"M/dd/yy\"),\n            // result,\n        }\n    })\n\n    // console.log(formattedGames2, 'formattedGames2')\n\n\n    const headers2 = [\n        { label: 'Date', className: 'whitespace-nowrap w-0', default: true },\n        // { label: '', className: 'w-0' },\n        { label: 'Opponent' },\n        { label: 'Result' },\n        { label: 'GF' },\n        { label: 'GA' },\n        { label: 'Diff' },\n    ];\n\n    const columns2 = {\n        start_date: 'date',\n        opponent: {\n            type: 'link',\n            format: '/games/$game_id',\n            as: '$opponent',\n            className: 'whitespace-nowrap',\n        },\n        result: 'string', \n        goals_for: 'number',\n        goals_against: 'number',\n        goal_differential: 'number',\n        // goal_differential: {\n        //     type: 'number',\n        //     className: 'whitespace-nowrap'\n        // },\n\n    }\n\n\n    return (\n        <main className=\"py-6\">\n            {/* <div className=\"flex justify-end\">\n                <button\n                    // onClick={() => setIsEditing(!isEditing)}\n                    className=\"transition duration-300 border border-mpblue text-mpblue py-1 px-3 mb-4  hover:text-white hover:bg-mpblue\"\n                >\n                    Create Game\n                </button>\n            </div> */}\n\n            <Modal isOpen={showCreateGameModal} onClose={setShowCreateGameModal} closeableOnBackdrop={!isLoading}>\n                {(closeModal) => <CreateGameModal closeModal={closeModal} />}\n            </Modal>\n\n            <div className=\"flex justify-end\">\n                <button\n                    onClick={() => setShowCreateGameModal(true)}\n                    className=\"transition duration-300 border border-mpblue text-mpblue py-1 px-3 mb-4  hover:text-white hover:bg-mpblue\"\n                >\n                    Create Game\n                </button>\n            </div>\n\n\n            {/* <div className=\"bg-white p-3 mb-6 sm:p-6\">\n                <div className=\"justify-between mb-3 sm:flex\">\n                    <Title>Games</Title>\n\n                    <div className=\"flex items-center mb-6 sm:mb-0 \">\n                        <p className=\"text-sm mr-2 mt-1\">Season:</p>\n                        <div className=\"w-full sm:w-48\">\n                            <Select options={optionsExample} onChange={e => setSelectedSeason(e)} value={selectedSeason} />\n                        </div>\n                    </div>\n\n                </div>\n                <Table\n                    headers={headers}\n                    columns={columns}\n                    body={formattedGames}\n                    // title=\"Games\"\n                />\n            </div> */}\n\n            <div className=\"bg-white p-3 mb-6 sm:p-6\">\n                <div className=\"justify-between mb-3 sm:flex\">\n                    <Title>Games</Title>\n\n                    <div className=\"flex items-center mb-6 sm:mb-0 \">\n                        <p className=\"text-sm mr-2 mt-1\">Season:</p>\n                        <div className=\"w-full sm:w-48\">\n                            <Select disabled options={optionsExample} onChange={e => setSelectedSeason(e)} value={selectedSeason} />\n                        </div>\n                    </div>\n\n                </div>\n                <Table\n                    headers={headers2}\n                    columns={columns2}\n                    body={formattedGames2}\n                    // title=\"Games\"\n                />\n            </div>\n        </main>\n    )\n}\n\nexport default Games;\n"]},"metadata":{},"sourceType":"module"}