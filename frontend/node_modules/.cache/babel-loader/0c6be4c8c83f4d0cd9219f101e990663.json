{"ast":null,"code":"var _jsxFileName = \"/Users/keithjones/Documents/development/projects/mp-lax/src/pages/Games.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Table, Select, Title } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GAMES = [{\n  id: 1,\n  home: true,\n  opponent: 'Sequoia',\n  date: '2/10/22',\n  has_been_played: true,\n  location: '',\n  notes: 'notes about game',\n  goals_for: 9,\n  goals_against: 7,\n  goal_differential: '+2'\n}, {\n  id: 2,\n  home: false,\n  opponent: 'Peachtree Ridge',\n  date: '2/13/22',\n  has_been_played: true,\n  location: '',\n  notes: 'notes about game',\n  goals_for: 11,\n  goals_against: 12,\n  goal_differential: -1\n}, {\n  id: 3,\n  home: true,\n  opponent: 'Alpharetta',\n  date: '2/23/22',\n  has_been_played: true,\n  location: '',\n  notes: 'notes about game',\n  goals_for: 19,\n  goals_against: 6,\n  goal_differential: '+13'\n}, {\n  id: 4,\n  home: true,\n  opponent: 'Alpharetta',\n  date: '2/25/22',\n  has_been_played: false,\n  location: '',\n  notes: 'notes about game'\n}];\n\nconst Games = () => {\n  _s();\n\n  const [selectedSeason, setSelectedSeason] = useState({\n    value: 525,\n    label: '2022 - [current]'\n  });\n  const formattedGames = GAMES.map(item => {\n    return { ...item,\n      opponent: `${item.home ? 'vs' : '@'} ${item.opponent}`,\n      goal_differential: `${!item.has_been_played ? 'Not Yet Played' : item.goal_differential}`\n    };\n  });\n  const headers = [{\n    label: 'Date',\n    className: 'whitespace-nowrap w-0',\n    default: true\n  }, // { label: '', className: 'w-0' },\n  {\n    label: 'Opponent'\n  }, {\n    label: 'GF'\n  }, {\n    label: 'GA'\n  }, {\n    label: 'Diff'\n  }];\n  const columns = {\n    date: 'date',\n    opponent: {\n      type: 'link',\n      format: '/games/$id',\n      as: '$opponent',\n      className: 'whitespace-nowrap'\n    },\n    goals_for: 'number',\n    goals_against: 'number',\n    // goal_differential: 'number',\n    goal_differential: {\n      type: 'number',\n      className: 'whitespace-nowrap'\n    }\n  };\n  const optionsExample = [{\n    value: 525,\n    label: '2022 - [current]'\n  }, {\n    value: 5253,\n    label: '2021'\n  }, {\n    value: 52534,\n    label: '2020'\n  }, {\n    value: 2352,\n    label: '2019'\n  }, {\n    value: 3423,\n    label: '2018'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"py-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-3 mb-6 sm:p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"justify-between mb-3 sm:flex\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: \"Season: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full mb-6 sm:mb-0 sm:w-48\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: optionsExample,\n              onChange: e => setSelectedSeason(e),\n              value: selectedSeason\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        headers: headers,\n        columns: columns,\n        body: formattedGames // title=\"Games\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Games, \"MSqIyu+V3PdVHFKRJLsi5X9VJxE=\");\n\n_c = Games;\nexport default Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/keithjones/Documents/development/projects/mp-lax/src/pages/Games.js"],"names":["useState","Table","Select","Title","GAMES","id","home","opponent","date","has_been_played","location","notes","goals_for","goals_against","goal_differential","Games","selectedSeason","setSelectedSeason","value","label","formattedGames","map","item","headers","className","default","columns","type","format","as","optionsExample","e"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Table , Select, Title } from \"../components\";\n\nconst GAMES = [\n    { id: 1, home: true, opponent: 'Sequoia', date: '2/10/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 9, goals_against: 7, goal_differential: '+2' },\n    { id: 2, home: false, opponent: 'Peachtree Ridge', date: '2/13/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 11, goals_against: 12, goal_differential: -1 },\n    { id: 3, home: true, opponent: 'Alpharetta', date: '2/23/22', has_been_played: true, location: '', notes: 'notes about game', goals_for: 19, goals_against: 6, goal_differential: '+13' },\n    { id: 4, home: true, opponent: 'Alpharetta', date: '2/25/22', has_been_played: false, location: '', notes: 'notes about game' }\n\n]\n\nconst Games = () => {\n    const [selectedSeason, setSelectedSeason] = useState({ value: 525, label: '2022 - [current]' });\n\n    const formattedGames = GAMES.map(item => {\n        return { \n            ...item,\n            opponent: `${item.home ? 'vs' : '@'} ${item.opponent}`,\n            goal_differential: `${!item.has_been_played ? 'Not Yet Played' : item.goal_differential}`\n        }\n    })\n\n    const headers = [\n        { label: 'Date', className: 'whitespace-nowrap w-0', default: true },\n        // { label: '', className: 'w-0' },\n        { label: 'Opponent' },\n        { label: 'GF' },\n        { label: 'GA' },\n        { label: 'Diff' },\n    ];\n\n    const columns = {\n        date: 'date',\n        opponent: {\n            type: 'link',\n            format: '/games/$id',\n            as: '$opponent',\n            className: 'whitespace-nowrap',\n        },\n        goals_for: 'number',\n        goals_against: 'number',\n        // goal_differential: 'number',\n        goal_differential: {\n            type: 'number',\n            className: 'whitespace-nowrap'\n        },\n\n    }\n\n    const optionsExample = [\n        { value: 525, label: '2022 - [current]' },\n        { value: 5253, label: '2021' },\n        { value: 52534, label: '2020' },\n        { value: 2352, label: '2019' },\n        { value: 3423, label: '2018' },\n    ]\n\n\n    return (\n        <main className=\"py-6\">\n            <div className=\"bg-white p-3 mb-6 sm:p-6\">\n                <div className=\"justify-between mb-3 sm:flex\">\n                    <Title>Games</Title>\n\n                    <div className=\"flex items-center\">\n                        <p className=\"text-sm\">Season: &nbsp;</p>\n                        <div className=\"w-full mb-6 sm:mb-0 sm:w-48\">\n                            <Select options={optionsExample} onChange={e => setSelectedSeason(e)} value={selectedSeason} />\n                        </div>\n                    </div>\n\n                </div>\n                <Table\n                    headers={headers}\n                    columns={columns}\n                    body={formattedGames}\n                    // title=\"Games\"\n                />\n            </div>\n        </main>\n    )\n}\n\nexport default Games;\n"]},"metadata":{},"sourceType":"module"}